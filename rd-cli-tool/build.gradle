/*
 * Copyright 2019 Rundeck, Inc. (http://rundeck.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



buildscript {
    repositories {
        mavenCentral()
    }

}
plugins {
    id 'groovy'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id "nebula.ospackage" version "8.1.0"
}

apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'org.rundeck.client.tool.Main'
applicationName = 'rd'
archivesBaseName = 'rundeck-cli'
//install path in rpm/deb
ext.distInstallPath = '/var/lib/rundeck-cli'
defaultTasks 'clean', 'build'

group='org.rundeck.rd'
description='Rundeck CLI Tool Executable Jar'
ext.publishName = "Rundeck CLI Tool ${project.version}"
ext.publishShadow = true
ext.githubSlug = 'rundeck/rundeck-cli'
ext.developers = [
    [id: 'gschueler', name: 'Greg Schueler', email: 'greg@rundeck.com']
]

repositories{
    mavenCentral()
    maven { url 'https://jitpack.io' }
}
dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation project(":rd-cli-lib"), project(":rd-api-client"), project(":rd-cli-base")
    implementation project(":rd-cli-enterprise")
    implementation 'com.github.rundeck:rd-ext-acl:v0.1.2:all'

    implementation "org.rundeck.cli-toolbelt:toolbelt:$toolbeltVersion"
    implementation "org.rundeck.cli-toolbelt:toolbelt-snakeyaml:$toolbeltVersion"
    implementation "org.rundeck.cli-toolbelt:toolbelt-json-jackson:$toolbeltVersion"
    implementation "org.rundeck.cli-toolbelt:toolbelt-jewelcli:$toolbeltVersion"

    testImplementation project(":rd-api-client")
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation "com.squareup.retrofit2:retrofit-mock:${retrofitVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    testImplementation "org.codehaus.groovy:groovy-all:3.0.10"
    testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
}
shadowJar {
    mergeServiceFiles()
    manifest {
        attributes(
            ['Add-Opens':'java.base/java.lang.invoke']
        )
    }
}

//force distZip/distTar artifacts to be overwritten by shadow versions
shadowDistZip.mustRunAfter distZip
shadowDistTar.mustRunAfter distTar

def scriptsClos = {
    def appendConfigData = { regexTest, additionalText, line ->
        line.replaceAll(~/${regexTest}/) { original ->
            original + "\n" + additionalText
        }
    }

    def setE = appendConfigData.curry(
            '^#!/usr/bin/env sh',
            '''
set -e
'''
    )
    def setClasspath = appendConfigData.curry(
            '^CLASSPATH=.*$',
            '''
# Source user's config file
RD_CONF=${RD_CONF:-$HOME/.$APP_NAME/$APP_NAME.conf}
test -f $RD_CONF && . $RD_CONF
export RD_EXT_DIR=${RD_EXT_DIR:-$HOME/.$APP_NAME/ext}
'''
    )
    def setJ11AddOpens=appendConfigData.curry(
        '^APP_ARGS=.*$',
        '''
if $JAVACMD --add-opens 2>&1 | grep 'requires modules' >/dev/null; then
  JAVA_OPTS="$JAVA_OPTS --add-opens=java.base/java.lang.invoke=ALL-UNNAMED"
fi
'''
    )

    // The default script content is generated and
    // with the doLast method we can still alter
    // the contents before the complete task ends.
    doLast {
        // Alter the start script for Unix systems.
        unixScript.text =
                unixScript
                        .readLines()
                        .collect(setE)
                        .collect(setClasspath)
                        .collect(setJ11AddOpens)
                        .join('\n')
    }

}
startScripts scriptsClos
startShadowScripts scriptsClos

task verifyScripts {
    group = "Verification"
    description = 'Verify the start scripts (normal and shadow) contain the modifications for the RD_CONF'
    doFirst {
        [startScripts.outputDir, startShadowScripts.outputDir].each { dir ->
            def f = new File(dir, applicationName)
            assert f.exists()
            assert f.text ==~ /(?s)^.*RD_CONF.*$/
        }
    }
}
check.dependsOn verifyScripts

/**
 * Define rpm/deb details
 */
ospackage {
    version = rpmVersion
    release = 1
    summary = "A commandline tool for Rundeck."
    packageDescription = "The rd program provides an all-in-one commandline tool to interact with Rundeck"
    url = 'https://github.com/rundeck/rundeck-cli'
    vendor = 'Rundeck, Inc.'
    license = 'APL'
    os = 'LINUX'
    packageGroup = 'System'
    user = 'root'
    prefix(distInstallPath)

    //packaging includes the shadowDistZip contents, exclude *.bat
    from(zipTree(shadowDistZip.outputs.files.singleFile)) {
        exclude '**/*.bat'
        into distInstallPath
    }

    def archivedir = shadowDistZip.archiveFileName.get() - ".${shadowDistZip.archiveExtension.get()}"

    def rdsymlink="/usr/bin/${applicationName}"
    def createLn="""/bin/ln -sf \${RPM_INSTALL_PREFIX:-${distInstallPath}}/${archivedir}/bin/${applicationName} ${rdsymlink}"""

    //symlink /usr/bin/rd to the rd script
    postInstall(createLn)

    //remove symlink, only if $1==0, package is being removed
    postUninstall("""[ \$1 = 0  ] && test -f ${rdsymlink}  && rm ${rdsymlink} || true""")

    //after upgrade try to create symlink if missing
    //earlier rd-cli version will always remove symlink in postUninstall
    postTrans("""[ \$1 = 0  ] && ! test -f ${rdsymlink} && ${createLn} || true""")
}

//depend on the shadow artifact
buildDeb.dependsOn shadowDistZip
buildRpm.dependsOn shadowDistZip
assemble.dependsOn buildRpm, buildDeb

apply from: "${rootDir}/gradle/publishing.gradle"
